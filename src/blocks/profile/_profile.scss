@use "sass:map";
@import "./src/scss/variables";

$text-width: 11.75rem;
$icon-size: 1.25rem;
$avatar-size: 7.5rem;

.profile {
  display: flex;
  flex-direction: column;
  gap: map.get($spaces, xs);
  align-items: center;

  @media (min-width: map.get($grid-breakpoints, md)) {
    flex-direction: row;
    gap: map.get($spaces, sm);
  }

  &__title-wrapper {
    position: relative;
    display: flex;
    justify-content: center;
    max-width: $text-width;

    @media (min-width: map.get($grid-breakpoints, md)) {
      align-items: flex-end;
      justify-content: space-between;
      width: 100%;
      max-width: 100%;
    }
  }

  &__title {
    overflow: hidden;
    margin: 0;
    font-weight: map.get($font-weight, "medium");
    font-size: map.get($font-size, md);
    text-overflow: ellipsis;
    white-space: nowrap;

    @media (min-width: map.get($grid-breakpoints, xl)) {
      font-size: map.get($font-size, xl);
    }
  }

  &__subtitle {
    overflow: hidden;
    max-width: 100%;
    margin: 0;
    text-overflow: ellipsis;
    white-space: nowrap;

    @media (min-width: map.get($grid-breakpoints, xl)) {
      font-size: map.get($font-size, sm);
    }
  }

  &__info {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;

    @media (min-width: map.get($grid-breakpoints, sm)) {
      max-width: 50%;
    }

    @media (min-width: map.get($grid-breakpoints, md)) {
      align-items: flex-start;
    }
  }

  &__button {
    box-sizing: border-box;
    padding: 0;
    border: none;
    background-color: transparent;
    background-position: center;
    background-size: auto;
    background-repeat: no-repeat;
    line-height: 0;
    cursor: pointer;
    transition: opacity $transition-duration ease;

    &_type_add {
      width: 100%;
      padding: map.get($spaces, xs);
      border: 2px solid map.get($theme-colors, "border-color");
      border-radius: $border-radius-xs;
      background-image: url("../images/add-icon.svg");

      @media (min-width: map.get($grid-breakpoints, sm)) {
        max-width: 50%;
      }

      @media (min-width: map.get($grid-breakpoints, md)) {
        max-width: fit-content;
        margin-left: auto;
        padding: map.get($spaces, xs) map.get($spaces, sm);
      }
    }

    &_type_edit {
      position: absolute;
      top: 0;
      right: -(map.get($spaces, sm));
      bottom: 0;
      align-self: center;
      min-width: $icon-size;
      height: $icon-size;
      margin: auto;
      border: 1px solid map.get($theme-colors, "border-color");
      background-image: url("../images/edit-icon.svg");

      @media (min-width: map.get($grid-breakpoints, md)) {
        position: relative;
        right: 0;
      }
    }

    &:hover {
      opacity: $opacity;
    }
  }

  &__avatar-wrap {
    max-height: $avatar-size;
  }

  &__avatar {
    max-width: $avatar-size;
    border-radius: 50%;
  }
}
