@use "sass:map";
@import "./src/scss/variables";
@import "./src/scss/helpers";

$content-width-xs: 17.5rem;
$content-width-md: 26.875rem;
$close-icon-size: 1.875rem;

.popup {
  @extend %fixed-full-size;

  z-index: -1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgb(0 0 0 / 50%);
  opacity: 0;
  transition: opacity $animation-duration ease,
    transform $animation-duration ease;
  transform: translateY(-20px);

  &__container {
    position: relative;
    display: flex;
    flex-direction: column;
    gap: map.get($spaces, xs);
    box-sizing: border-box;
    min-width: $content-width-xs;
    padding: map.get($spaces, xs);
    border-radius: $border-radius;
    background-color: map.get($theme-colors, "bg-inverse-color");
    box-shadow: 0 0 map.get($spaces, sm) rgb(0 0 0 / 15%);

    @media (min-width: map.get($grid-breakpoints, md)) {
      gap: map.get($spaces, sm);
      min-width: $content-width-md;
      padding: map.get($spaces, sm);
    }
  }

  &__title {
    margin: 0;
    padding: 0;
    color: map.get($theme-colors, "text-inverse-color");
    font-weight: map.get($font-weight, "black");
    font-size: map.get($font-size, md);
  }

  &__close-button {
    position: absolute;
    top: -(map.get($spaces, sm));
    right: 0;
    width: $close-icon-size;
    height: $close-icon-size;
    margin: 0;
    padding: 0;
    border: none;
    background-color: transparent;
    background-image: url("../images/close-icon.svg");
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    cursor: pointer;
    transition: opacity $transition-duration ease;

    @media (min-width: map.get($grid-breakpoints, md)) {
      top: -(map.get($spaces, sm));
      right: -(map.get($spaces, sm));
    }

    &:hover {
      opacity: $opacity;
    }
  }

  &_type_image-place {
    background: rgb(0 0 0 / 90%);
  }

  &_opened {
    z-index: 0;
    opacity: 1;
    transform: translateY(20px);
  }
}
